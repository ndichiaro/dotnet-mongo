# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: $(version)$(Rev:.r)$(release)
trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  version: 1.5.0
  release: 
  package: $(version)$(release)
  core-version: 3.2.0
  core-release: 
  core-package: $(core-version)$(core-release)

steps:
- task: UseDotNet@2
  displayName: Install .NET 7.0
  inputs:
    packageType: 'sdk'
    version: '7.0.x'

- task: Assembly-Info-NetCore@2
  inputs:
    Path: '$(Build.SourcesDirectory)'
    FileNames: '**/Tools.Net.Mongo.Core.csproj'
    InsertAttributes: false
    FileEncoding: 'auto'
    WriteBOM: false
    VersionNumber: '1.0.0'
    FileVersionNumber: '1.0.0'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) -p:Version=$(Build.BuildNumber)'
  
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/tests/*.Test/*.csproj'
    arguments: '--configuration $(buildConfiguration) --logger trx --collect "Code coverage"'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/Tools.Net.Mongo.Core.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'core-package'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/Tools.Net.Mongo.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'package'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
