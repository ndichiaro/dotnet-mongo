//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to the class structure, e.g. function names and parameters,
//     may cause incorrect behavior. Make changes only to each function body
//     in order to properly perform a migration
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using MongoDB.Bson;
using MongoDB.Driver;

namespace Migrations
{
    public class M202501160002_AddSampleUsers
    {
        /// <summary>
        /// Downgrades a MongoDB database
        /// </summary>
        /// <param name="database">The MongoDB database instance</param>
        public bool Down(IMongoDatabase database)
        {
            var usersCollection = database.GetCollection<BsonDocument>("users");
            
            // Remove the users we added
            var emails = new[] { "john.doe@example.com", "jane.smith@example.com", "bob.johnson@example.com" };
            var filter = Builders<BsonDocument>.Filter.In("email", emails);
            usersCollection.DeleteMany(filter);
            
            return true;
        }

        /// <summary>
        /// Upgrades a MongoDB database
        /// </summary>
        /// <param name="database">The MongoDB database instance</param>
        public bool Up(IMongoDatabase database)
        {
            var usersCollection = database.GetCollection<BsonDocument>("users");

            var users = new[]
            {
                new BsonDocument
                {
                    {"firstName", "John"},
                    {"lastName", "Doe"},
                    {"email", "john.doe@example.com"},
                    {"createdAt", DateTime.UtcNow}
                },
                new BsonDocument
                {
                    {"firstName", "Jane"},
                    {"lastName", "Smith"},
                    {"email", "jane.smith@example.com"},
                    {"createdAt", DateTime.UtcNow}
                },
                new BsonDocument
                {
                    {"firstName", "Bob"},
                    {"lastName", "Johnson"},
                    {"email", "bob.johnson@example.com"},
                    {"createdAt", DateTime.UtcNow}
                }
            };

            usersCollection.InsertMany(users);
            return true;
        }
    }
}
